{"ast":null,"code":"var _jsxFileName = \"/home/quan/photo_sharing_mongoDB/frontend/src/components/UserPhotos/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the list of users\n\n  useEffect(() => {\n    const fetchUserPhotos = async () => {\n      try {\n        const data = await fetchModel(`photo/${userId}`);\n        console.log(data);\n        setPhotos(data);\n      } catch (error) {\n        console.error(\"Error fetching user list:\", error);\n      }\n    };\n    fetchUserPhotos();\n  }, [userId]);\n  if (photos) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"User Photos for User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), photos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Time: \", photo.date_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, photo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"No photos found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n_s(UserPhotos, \"ilFOEtI0dWeOWjiFqBIAqwRhilM=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","Typography","useParams","fetchModel","jsxDEV","_jsxDEV","UserPhotos","_s","userId","photos","setPhotos","fetchUserPhotos","data","console","log","error","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","map","photo","date_time","_id","_c","$RefreshReg$"],"sources":["/home/quan/photo_sharing_mongoDB/frontend/src/components/UserPhotos/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the list of users\n\n  useEffect(() => {\n    const fetchUserPhotos = async () => {\n      try {\n        const data = await fetchModel(`photo/${userId}`);\n        console.log(data);\n        setPhotos(data);\n      } catch (error) {\n        console.error(\"Error fetching user list:\", error);\n      }\n    };\n\n    fetchUserPhotos();\n  }, [userId]);\n  if (photos)\n    return (\n      <div>\n        <Typography variant=\"body1\">\n          User Photos for User ID: {userId}\n        </Typography>\n        {photos.length > 0 ? (\n          <div>\n            {photos.map((photo) => (\n              <div key={photo._id}>\n                {/* <img src={\"/images/\" + photo.file_name} /> */}\n                <Typography variant=\"body2\">Time: {photo.date_time}</Typography>\n                <Typography variant=\"h6\">Comments</Typography>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <Typography variant=\"body1\">No photos found.</Typography>\n        )}\n      </div>\n    );\n}\n\nexport default UserPhotos;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,UAAU,CAAE,SAAQK,MAAO,EAAC,CAAC;QAChDK,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBF,SAAS,CAACE,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EACZ,IAAIC,MAAM,EACR,oBACEJ,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACJ,UAAU;MAACgB,OAAO,EAAC,OAAO;MAAAD,QAAA,GAAC,2BACD,EAACR,MAAM;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACZZ,MAAM,CAACa,MAAM,GAAG,CAAC,gBAChBjB,OAAA;MAAAW,QAAA,EACGP,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChBnB,OAAA;QAAAW,QAAA,gBAEEX,OAAA,CAACJ,UAAU;UAACgB,OAAO,EAAC,OAAO;UAAAD,QAAA,GAAC,QAAM,EAACQ,KAAK,CAACC,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAChEhB,OAAA,CAACJ,UAAU;UAACgB,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA,GAHtCG,KAAK,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENhB,OAAA,CAACJ,UAAU;MAACgB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACd,EAAA,CAtCQD,UAAU;EAAA,QACEJ,SAAS;AAAA;AAAAyB,EAAA,GADrBrB,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}