{"ast":null,"code":"var _jsxFileName = \"/home/quan/photo_sharing_mongoDB/frontend/src/components/UserPhotos/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the list of users\n\n  useEffect(() => {\n    const fetchUserPhotos = async () => {\n      try {\n        const data = await fetchModel(`photo/${userId}`);\n        console.log(data);\n        setPhotos(data);\n      } catch (error) {\n        console.error(\"Error fetching user list:\", error);\n      }\n    };\n    fetchUserPhotos();\n  }, [userId]);\n\n  // Check if photos is an array before rendering\n  if (!Array.isArray(photos)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"User Photo for User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Time: \", photos.date_time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), photos.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Comment: \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Time: \", comment.date_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, photos._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"ilFOEtI0dWeOWjiFqBIAqwRhilM=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","Typography","useParams","fetchModel","jsxDEV","_jsxDEV","UserPhotos","_s","userId","photos","setPhotos","fetchUserPhotos","data","console","log","error","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","date_time","comments","map","comment","_id","_c","$RefreshReg$"],"sources":["/home/quan/photo_sharing_mongoDB/frontend/src/components/UserPhotos/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\n\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the list of users\n\n  useEffect(() => {\n    const fetchUserPhotos = async () => {\n      try {\n        const data = await fetchModel(`photo/${userId}`);\n        console.log(data);\n        setPhotos(data);\n      } catch (error) {\n        console.error(\"Error fetching user list:\", error);\n      }\n    };\n\n    fetchUserPhotos();\n  }, [userId]);\n\n  // Check if photos is an array before rendering\n  if (!Array.isArray(photos)) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\">User Photo for User ID: {userId}</Typography>\n      <div key={photos._id}>\n        {/* <img src={\"/images/\" + photo.file_name} /> */}\n        <Typography variant=\"body2\">Time: {photos.date_time}</Typography>\n        <Typography variant=\"h6\">Comments</Typography>\n        {photos.comments.map((comment) => (\n          <div key={comment._id}>\n            <Typography variant=\"body2\">Comment: {comment.comment}</Typography>\n            <Typography variant=\"body2\">Time: {comment.date_time}</Typography>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}